{"ast":null,"code":"import _regeneratorRuntime from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from 'mongodb';\nvar MONGODB_URI = process.env.MONGODB_URI;\nvar MONGODB_DB = process.env.MONGODB_DB;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\nif (!MONGODB_DB) {\n  throw new Error('Please define the MONGODB_DB environment variable inside .env.local');\n}\n\nvar client = new MongoClient(MONGODB_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nfunction database(_x, _x2, _x3) {\n  return _database.apply(this, arguments);\n}\n\nfunction _database() {\n  _database = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, next) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (client.isConnected()) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return client.connect();\n\n          case 3:\n            req.dbClient = client;\n            req.db = client.db(MONGODB_DB);\n            return _context.abrupt(\"return\", next());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _database.apply(this, arguments);\n}\n\nvar middleware = nextConnect();\nmiddleware.use(database);\nexport default middleware;","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/lib/mongodb.js"],"names":["MongoClient","MONGODB_URI","process","env","MONGODB_DB","Error","client","useNewUrlParser","useUnifiedTopology","database","req","res","next","isConnected","connect","dbClient","db","middleware","nextConnect","use"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYF,WAAhC;AACA,IAAMG,UAAU,GAAGF,OAAO,CAACC,GAAR,CAAYC,UAA/B;;AAEA,IAAI,CAACH,WAAL,EAAkB;AAChB,QAAM,IAAII,KAAJ,CACJ,sEADI,CAAN;AAGD;;AAED,IAAI,CAACD,UAAL,EAAiB;AACf,QAAM,IAAIC,KAAJ,CACJ,qEADI,CAAN;AAGD;;AAED,IAAMC,MAAM,GAAG,IAAIN,WAAJ,CAAgBC,WAAhB,EAA6B;AAC1CM,EAAAA,eAAe,EAAE,IADyB;AAE1CC,EAAAA,kBAAkB,EAAE;AAFsB,CAA7B,CAAf;;SAIeC,Q;;;;;uEAAf,iBAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBACON,MAAM,CAACO,WAAP,EADP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBACmCP,MAAM,CAACQ,OAAP,EADnC;;AAAA;AAEEJ,YAAAA,GAAG,CAACK,QAAJ,GAAeT,MAAf;AACAI,YAAAA,GAAG,CAACM,EAAJ,GAASV,MAAM,CAACU,EAAP,CAAUZ,UAAV,CAAT;AAHF,6CAISQ,IAAI,EAJb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,IAAMK,UAAU,GAAGC,WAAW,EAA9B;AACAD,UAAU,CAACE,GAAX,CAAeV,QAAf;AACA,eAAeQ,UAAf","sourcesContent":["import { MongoClient } from 'mongodb'\n\nconst MONGODB_URI = process.env.MONGODB_URI\nconst MONGODB_DB = process.env.MONGODB_DB\n\nif (!MONGODB_URI) {\n  throw new Error(\n    'Please define the MONGODB_URI environment variable inside .env.local'\n  )\n}\n\nif (!MONGODB_DB) {\n  throw new Error(\n    'Please define the MONGODB_DB environment variable inside .env.local'\n  )\n}\n\nconst client = new MongoClient(MONGODB_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\nasync function database(req, res, next) {\n  if (!client.isConnected()) await client.connect();\n  req.dbClient = client;\n  req.db = client.db(MONGODB_DB);\n  return next();\n}\nconst middleware = nextConnect();\nmiddleware.use(database);\nexport default middleware;"]},"metadata":{},"sourceType":"module"}