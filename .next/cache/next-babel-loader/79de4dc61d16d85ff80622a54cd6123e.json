{"ast":null,"code":"import { message } from 'antd';\nimport { notification } from 'antd';\n\nconst modalNotification = (type, message, desc) => {\n  notification[type]({\n    message: message,\n    description: desc,\n    duration: 3\n  });\n};\n\nconst mail = require('@sendgrid/mail');\n\nmail.setApiKey(process.env.SENDGRID_API_KEY);\nexport default (async (req, res) => {\n  const body = JSON.parse(req.body);\n  const message = `\n        Name: ${body.name}\\r\\n\n        Email: ${body.email}\\r\\n\n        Message: ${body.message}\n    `;\n  console.log(process.env.CUSTOMER_EMAIL);\n  const data = {\n    to: body.email,\n    from: process.env.CUSTOMER_EMAIL,\n    cc: process.env.CUSTOMER_EMAIL,\n    subject: body.subject,\n    text: message,\n    html: message.replace(/\\r\\n/g, '<br>')\n  };\n\n  try {\n    await mail.send(data);\n    notification['success']({\n      message: \"Thank you!!\",\n      description: \"We recived you massage\",\n      duration: 3\n    }); // await modalNotification('success', \"Thank you!!\", \"We recived you massage\")\n\n    res.status(200).json({\n      status: \"OK\"\n    });\n  } catch (error) {\n    modalNotification('error', \"Oppp!!\", \"Sorry!! Something is wrong\");\n  }\n});","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/pages/api/mail.jsx"],"names":["message","notification","modalNotification","type","desc","description","duration","mail","require","setApiKey","process","env","SENDGRID_API_KEY","req","res","body","JSON","parse","name","email","console","log","CUSTOMER_EMAIL","data","to","from","cc","subject","text","html","replace","send","status","json","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,YAAT,QAA6B,MAA7B;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOH,OAAP,EAAgBI,IAAhB,KAAyB;AAC/CH,EAAAA,YAAY,CAACE,IAAD,CAAZ,CAAmB;AACfH,IAAAA,OAAO,EAAEA,OADM;AAEfK,IAAAA,WAAW,EAAED,IAFE;AAGfE,IAAAA,QAAQ,EAAE;AAHK,GAAnB;AAKH,CAND;;AAQA,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEAD,IAAI,CAACE,SAAL,CAAeC,OAAO,CAACC,GAAR,CAAYC,gBAA3B;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACE,IAAf,CAAb;AAEA,QAAMf,OAAO,GAAI;AACrB,gBAAgBe,IAAI,CAACG,IAAK;AAC1B,iBAAiBH,IAAI,CAACI,KAAM;AAC5B,mBAAmBJ,IAAI,CAACf,OAAQ;AAChC,KAJI;AAKAoB,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACC,GAAR,CAAYW,cAAxB;AACA,QAAMC,IAAI,GAAG;AACTC,IAAAA,EAAE,EAAET,IAAI,CAACI,KADA;AAETM,IAAAA,IAAI,EAAEf,OAAO,CAACC,GAAR,CAAYW,cAFT;AAGTI,IAAAA,EAAE,EAAEhB,OAAO,CAACC,GAAR,CAAYW,cAHP;AAITK,IAAAA,OAAO,EAAEZ,IAAI,CAACY,OAJL;AAKTC,IAAAA,IAAI,EAAE5B,OALG;AAMT6B,IAAAA,IAAI,EAAE7B,OAAO,CAAC8B,OAAR,CAAgB,OAAhB,EAAyB,MAAzB;AANG,GAAb;;AASA,MAAI;AACA,UAAMvB,IAAI,CAACwB,IAAL,CAAUR,IAAV,CAAN;AACAtB,IAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACpBD,MAAAA,OAAO,EAAE,aADW;AAEpBK,MAAAA,WAAW,EAAE,wBAFO;AAGpBC,MAAAA,QAAQ,EAAE;AAHU,KAAxB,EAFA,CAOA;;AACAQ,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE;AAAV,KAArB;AACH,GATD,CASE,OAAOE,KAAP,EAAc;AACZhC,IAAAA,iBAAiB,CAAC,OAAD,EAAU,QAAV,EAAoB,4BAApB,CAAjB;AACH;AAEJ,CA/BD","sourcesContent":["import { message } from 'antd'\nimport { notification } from 'antd';\n\nconst modalNotification = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: desc,\n        duration: 3,\n    });\n};\n\nconst mail = require('@sendgrid/mail')\n\nmail.setApiKey(process.env.SENDGRID_API_KEY)\n\nexport default async (req, res) => {\n    const body = JSON.parse(req.body)\n\n    const message = `\n        Name: ${body.name}\\r\\n\n        Email: ${body.email}\\r\\n\n        Message: ${body.message}\n    `\n    console.log(process.env.CUSTOMER_EMAIL)\n    const data = {\n        to: body.email,\n        from: process.env.CUSTOMER_EMAIL,\n        cc: process.env.CUSTOMER_EMAIL,\n        subject: body.subject,\n        text: message,\n        html: message.replace(/\\r\\n/g, '<br>')\n    }\n\n    try {\n        await mail.send(data)\n        notification['success']({\n            message: \"Thank you!!\",\n            description: \"We recived you massage\",\n            duration: 3,\n        });\n        // await modalNotification('success', \"Thank you!!\", \"We recived you massage\")\n        res.status(200).json({ status: \"OK\" })\n    } catch (error) {\n        modalNotification('error', \"Oppp!!\", \"Sorry!! Something is wrong\")\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}