{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './action';\nexport const initState = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  address: \"\",\n  apartment: \"\",\n  city: \"\",\n  postalCode: \"\",\n  phone: \"\",\n  error: null\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case actionTypes.UPDATE_INFO:\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, state), {\n        email: action.email\n      }), {\n        firstName: action.firstName\n      }), {\n        lastName: action.lastName\n      }), {\n        address: action.address\n      }), {\n        apartment: action.apartment\n      }), {\n        city: action.city\n      }), {\n        postalCode: action.postalCode\n      }), {\n        phone: action.phone\n      });\n\n    case actionTypes.UPDATE_INFO_FAIL:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/store/checkout/reducer.js"],"names":["actionTypes","initState","email","firstName","lastName","address","apartment","city","postalCode","phone","error","reducer","state","action","type","UPDATE_INFO","UPDATE_INFO_FAIL"],"mappings":";;;;;;AAAA,SACEA,WADF,QAEO,UAFP;AAIA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,SAAS,EAAE,EAFY;AAGvBC,EAAAA,QAAQ,EAAE,EAHa;AAIvBC,EAAAA,OAAO,EAAE,EAJc;AAKvBC,EAAAA,SAAS,EAAE,EALY;AAMvBC,EAAAA,IAAI,EAAE,EANiB;AAOvBC,EAAAA,UAAU,EAAE,EAPW;AAQvBC,EAAAA,KAAK,EAAE,EARgB;AASvBC,EAAAA,KAAK,EAAE;AATgB,CAAlB;;AAYP,SAASC,OAAT,CAAiBC,KAAK,GAAGX,SAAzB,EAAoCY,MAApC,EAA4C;AAC1C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKd,WAAW,CAACe,WAAjB;AACE,+IACKH,KADL,GAEK;AAACV,QAAAA,KAAK,EAAEW,MAAM,CAACX;AAAf,OAFL,GAGK;AAACC,QAAAA,SAAS,EAAEU,MAAM,CAACV;AAAnB,OAHL,GAIK;AAACC,QAAAA,QAAQ,EAAES,MAAM,CAACT;AAAlB,OAJL,GAKK;AAACC,QAAAA,OAAO,EAAEQ,MAAM,CAACR;AAAjB,OALL,GAMK;AAACC,QAAAA,SAAS,EAAEO,MAAM,CAACP;AAAnB,OANL,GAOK;AAACC,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAAd,OAPL,GAQK;AAACC,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAApB,OARL,GASK;AAACC,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAf,OATL;;AAWF,SAAKT,WAAW,CAACgB,gBAAjB;AACE,6CACKJ,KADL,GAEK;AAACF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAAf,OAFL;;AAIF;AACE,aAAOE,KAAP;AApBJ;AAsBD;;AAED,eAAeD,OAAf","sourcesContent":["import {\n  actionTypes,\n} from './action';\n\nexport const initState = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  address: \"\",\n  apartment: \"\",\n  city: \"\",\n  postalCode: \"\",\n  phone: \"\",\n  error: null\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n\n    case actionTypes.UPDATE_INFO:\n      return {\n        ...state,\n        ...{email: action.email},\n        ...{firstName: action.firstName},\n        ...{lastName: action.lastName},\n        ...{address: action.address},\n        ...{apartment: action.apartment},\n        ...{city: action.city},\n        ...{postalCode: action.postalCode},\n        ...{phone: action.phone},\n      }\n    case actionTypes.UPDATE_INFO_FAIL:\n      return {\n        ...state,\n        ...{error: action.error}\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}