{"ast":null,"code":"import _regeneratorRuntime from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Repository, { baseUrl } from './Repository';\nimport Cookie from 'js-cookie';\n\nvar UserRepository = /*#__PURE__*/function () {\n  function UserRepository() {\n    _classCallCheck(this, UserRepository);\n  }\n\n  _createClass(UserRepository, [{\n    key: \"login\",\n    value: function login(values) {\n      var res = Repository.post(\"\".concat(baseUrl, \"/users/login\"), values);\n      return res;\n    }\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Repository.post(\"\".concat(baseUrl, \"/users/register\"), values).then(function (response) {\n                  return response;\n                })[\"catch\"](function (error) {\n                  return {\n                    error: JSON.stringify(error)\n                  };\n                });\n\n              case 2:\n                reponse = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function register(_x) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId, token) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Repository.get(\"\".concat(baseUrl, \"/users/\").concat(userId), {\n                  headers: {\n                    Authorization: \"Bearer \".concat(token)\n                  }\n                });\n\n              case 2:\n                response = _context2.sent;\n\n                if (!(response.data.status == 200)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", response.data.data);\n\n              case 7:\n                return _context2.abrupt(\"return\", null);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getUser(_x2, _x3) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: \"updateUser\",\n    value: function updateUser(_ref) {\n      var payload = _ref.payload;\n      var res = Repository.post(\"\".concat(baseUrl, \"/users/\").concat(payload.userId), payload.values, {\n        headers: {\n          'Authorization': \"Bearer \".concat(payload.token)\n        }\n      });\n      return res;\n    }\n  }]);\n\n  return UserRepository;\n}();\n\nexport default new UserRepository();","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/repositories/UserRepository.js"],"names":["Repository","baseUrl","Cookie","UserRepository","values","res","post","then","response","error","JSON","stringify","reponse","userId","token","get","headers","Authorization","data","status","payload"],"mappings":";;;;AAAA,OAAOA,UAAP,IACIC,OADJ,QAEO,cAFP;AAGA,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,c;;;;;;;0BACIC,M,EAAQ;AACV,UAAMC,GAAG,GAAGL,UAAU,CAACM,IAAX,WAAmBL,OAAnB,mBAA0CG,MAA1C,CAAZ;AACA,aAAOC,GAAP;AACH;;;;gGAEcD,M;;;;;;;uBACWJ,UAAU,CAACM,IAAX,WAAmBL,OAAnB,sBAA6CG,MAA7C,EACrBG,IADqB,CAChB,UAACC,QAAD,EAAc;AAChB,yBAAOA,QAAP;AACH,iBAHqB,WAIf,UAACC,KAAD;AAAA,yBAAY;AAAEA,oBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf;AAAT,mBAAZ;AAAA,iBAJe,C;;;AAAhBG,gBAAAA,O;;;;;;;;;;;;;;;;;;;gGAQIC,M,EAAQC,K;;;;;;;uBAEKd,UAAU,CAACe,GAAX,WAAkBd,OAAlB,oBAAmCY,MAAnC,GAA6C;AAChEG,kBAAAA,OAAO,EAAE;AACLC,oBAAAA,aAAa,mBAAYH,KAAZ;AADR;AADuD,iBAA7C,C;;;AAAjBN,gBAAAA,Q;;sBAKFA,QAAQ,CAACU,IAAT,CAAcC,MAAd,IAAwB,G;;;;;kDACjBX,QAAQ,CAACU,IAAT,CAAcA,I;;;kDAEd,I;;;;;;;;;;;;;;;;;;qCAKO;AAAA,UAAVE,OAAU,QAAVA,OAAU;AAClB,UAAMf,GAAG,GAAGL,UAAU,CAACM,IAAX,WAAmBL,OAAnB,oBAAoCmB,OAAO,CAACP,MAA5C,GAAsDO,OAAO,CAAChB,MAA9D,EAAsE;AAC9EY,QAAAA,OAAO,EAAE;AACL,4CAA2BI,OAAO,CAACN,KAAnC;AADK;AADqE,OAAtE,CAAZ;AAKA,aAAOT,GAAP;AAEH;;;;;;AAGL,eAAe,IAAIF,cAAJ,EAAf","sourcesContent":["import Repository, {\n    baseUrl\n} from './Repository';\nimport Cookie from 'js-cookie';\n\nclass UserRepository {\n    login(values) {\n        const res = Repository.post(`${baseUrl}/users/login`, values)\n        return res;\n    }\n\n    async register(values) {\n        const reponse = await Repository.post(`${baseUrl}/users/register`, values)\n        .then((response) => {\n            return response;\n        })\n        .catch((error) => ({ error: JSON.stringify(error) }));\n        \n    }\n\n    async getUser(userId, token) {\n       \n        const response = await Repository.get(`${baseUrl}/users/${userId}`, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        if (response.data.status == 200){\n            return response.data.data\n        } else {\n            return null\n        }\n        \n    }\n\n    updateUser({payload}) { \n        const res = Repository.post(`${baseUrl}/users/${payload.userId}`, payload.values, {\n            headers: {\n                'Authorization': `Bearer ${payload.token}`,\n            }\n        })\n        return res\n        \n    }\n}\n\nexport default new UserRepository();"]},"metadata":{},"sourceType":"module"}