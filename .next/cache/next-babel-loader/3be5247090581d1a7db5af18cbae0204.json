{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '~/lib/mongodb';\n\nconst bcrypt = require('bcryptjs');\n\nconst jwt = require('jsonwebtoken');\n\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.post(async (req, res) => {\n  const user = await req.db.collection('config').findOne({\n    email: req.body.email\n  });\n});\nhandler.get(async (req, res) => {\n  const contact = await req.db.collection('config').findOne({\n    name: 'contact'\n  });\n\n  if (contract) {\n    return res.status(200).json({\n      data: contact,\n      message: \"OK\",\n      status: 200,\n      success: true\n    });\n  } else {\n    return res.status(400).json({\n      status: 400,\n      success: false\n    });\n  }\n});\nexport default handler;","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/pages/api/contact.jsx"],"names":["nextConnect","middleware","bcrypt","require","jwt","handler","use","post","req","res","user","db","collection","findOne","email","body","get","contact","name","contract","status","json","data","message","success"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAME,OAAO,GAAGL,WAAW,EAA3B;AAEAK,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEAI,OAAO,CAACE,IAAR,CAAa,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7B,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,QAAlB,EAA4BC,OAA5B,CAAoC;AAACC,IAAAA,KAAK,EAAEN,GAAG,CAACO,IAAJ,CAASD;AAAjB,GAApC,CAAnB;AAGH,CAJD;AAMAT,OAAO,CAACW,GAAR,CAAY,OAAOR,GAAP,EAAYC,GAAZ,KAAoB;AAC5B,QAAMQ,OAAO,GAAG,MAAMT,GAAG,CAACG,EAAJ,CAAOC,UAAP,CAAkB,QAAlB,EAA4BC,OAA5B,CAAoC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAApC,CAAtB;;AAEA,MAAIC,QAAJ,EAAc;AACV,WAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,IAAI,EAAEL,OADkB;AAExBM,MAAAA,OAAO,EAAE,IAFe;AAGxBH,MAAAA,MAAM,EAAE,GAHgB;AAIxBI,MAAAA,OAAO,EAAE;AAJe,KAArB,CAAP;AAMH,GAPD,MAOO;AACH,WAAOf,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,MAAAA,MAAM,EAAE,GADgB;AAExBI,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AAEJ,CAjBD;AAoBA,eAAenB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\nimport middleware from '~/lib/mongodb';\n\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst handler = nextConnect();\n\nhandler.use(middleware);\n\nhandler.post(async (req, res) => {\n    const user = await req.db.collection('config').findOne({email: req.body.email})\n\n    \n})\n\nhandler.get(async (req, res) => {\n    const contact = await req.db.collection('config').findOne({name: 'contact'})\n    \n    if (contract) {\n        return res.status(200).json({\n            data: contact,\n            message: \"OK\",\n            status: 200,\n            success: true,\n        })\n    } else {\n        return res.status(400).json({\n            status: 400,\n            success: false,\n        })\n    }\n    \n})\n\n\nexport default handler"]},"metadata":{},"sourceType":"module"}