{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ponlv/work/projects/hmsp/bluestone/pages/admin/index.jsx\";\nimport React from 'react';\nimport ContainerPage from '~/components/layouts/ContainerPage';\nimport VendorBanner from '~/components/partials/VendorBanner';\nimport VendorAbout from '~/components/partials/VendorAbout';\nimport VendorMileStone from '~/components/partials/VendorMileStone';\nimport VendorBestFees from '~/components/partials/VendorBestFees';\nimport VendorTestimonials from '~/components/partials/VendorTestimonials';\nimport VendorFaqs from '~/components/partials/VendorFaqs';\nimport ContactForm from '~/components/partials/ContactForm';\nimport { connectToDatabase } from '~/lib/mongodb';\nimport { isAuthenticated, getCookie } from '~/components/shared/authenticate/Authenticate';\nimport UserRepository from '~/repositories/UserRepository';\n\nconst BecomeAVendorPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"admin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const res = isAuthenticated(context);\n\n  if (res == false) {\n    return {\n      redirect: {\n        destination: '/admin/login',\n        permanent: false\n      }\n    };\n  } else {\n    const userId = getCookie('userId', context.req);\n    const token = getCookie('jwt', context.req);\n    const user = await UserRepository.getUser(userId, token);\n    const {\n      client\n    } = await connectToDatabase();\n    const isConnected = await client.isConnected();\n    return {\n      props: {\n        isConnected,\n        user\n      }\n    };\n  }\n}\nexport default BecomeAVendorPage;","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/pages/admin/index.jsx"],"names":["React","ContainerPage","VendorBanner","VendorAbout","VendorMileStone","VendorBestFees","VendorTestimonials","VendorFaqs","ContactForm","connectToDatabase","isAuthenticated","getCookie","UserRepository","BecomeAVendorPage","getServerSideProps","context","res","redirect","destination","permanent","userId","req","token","user","getUser","client","isConnected","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,+CAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;AASA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C,QAAMC,GAAG,GAAGN,eAAe,CAACK,OAAD,CAA3B;;AACA,MAAIC,GAAG,IAAI,KAAX,EAAkB;AACd,WAAO;AACHC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,WAAW,EAAE,cADP;AAENC,QAAAA,SAAS,EAAE;AAFL;AADP,KAAP;AAMH,GAPD,MAOO;AACH,UAAMC,MAAM,GAAGT,SAAS,CAAC,QAAD,EAAWI,OAAO,CAACM,GAAnB,CAAxB;AACA,UAAMC,KAAK,GAAGX,SAAS,CAAC,KAAD,EAAQI,OAAO,CAACM,GAAhB,CAAvB;AACA,UAAME,IAAI,GAAG,MAAMX,cAAc,CAACY,OAAf,CAAuBJ,MAAvB,EAA+BE,KAA/B,CAAnB;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAa,MAAMhB,iBAAiB,EAA1C;AACA,UAAMiB,WAAW,GAAG,MAAMD,MAAM,CAACC,WAAP,EAA1B;AAEA,WAAO;AACHC,MAAAA,KAAK,EAAE;AAAED,QAAAA,WAAF;AAAeH,QAAAA;AAAf;AADJ,KAAP;AAIH;AAEJ;AAGD,eAAeV,iBAAf","sourcesContent":["import React from 'react';\nimport ContainerPage from '~/components/layouts/ContainerPage';\nimport VendorBanner from '~/components/partials/VendorBanner';\nimport VendorAbout from '~/components/partials/VendorAbout';\nimport VendorMileStone from '~/components/partials/VendorMileStone';\nimport VendorBestFees from '~/components/partials/VendorBestFees';\nimport VendorTestimonials from '~/components/partials/VendorTestimonials';\nimport VendorFaqs from '~/components/partials/VendorFaqs';\nimport ContactForm from '~/components/partials/ContactForm';\nimport { connectToDatabase } from '~/lib/mongodb'\nimport { isAuthenticated, getCookie } from '~/components/shared/authenticate/Authenticate'\nimport UserRepository from '~/repositories/UserRepository';\n\nconst BecomeAVendorPage = () => {\n\n    return (\n        <div >\n            admin\n        </div>\n    );\n};\n\nexport async function getServerSideProps(context) {\n    const res = isAuthenticated(context)\n    if (res == false) {\n        return {\n            redirect: {\n                destination: '/admin/login',\n                permanent: false,\n            },\n        }\n    } else {\n        const userId = getCookie('userId', context.req)\n        const token = getCookie('jwt', context.req)\n        const user = await UserRepository.getUser(userId, token)\n\n        const { client } = await connectToDatabase()\n        const isConnected = await client.isConnected()\n\n        return {\n            props: { isConnected, user },\n        }\n        \n    }\n\n}\n\n\nexport default BecomeAVendorPage;\n"]},"metadata":{},"sourceType":"module"}