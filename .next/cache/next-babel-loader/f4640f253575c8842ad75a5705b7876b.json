{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ponlv/work/projects/hmsp/bluestone/pages/admin/index.jsx\";\nimport React from 'react';\nimport ContainerPage from '~/components/layouts/ContainerPage';\nimport VendorBanner from '~/components/partials/VendorBanner';\nimport VendorAbout from '~/components/partials/VendorAbout';\nimport VendorMileStone from '~/components/partials/VendorMileStone';\nimport VendorBestFees from '~/components/partials/VendorBestFees';\nimport VendorTestimonials from '~/components/partials/VendorTestimonials';\nimport VendorFaqs from '~/components/partials/VendorFaqs';\nimport ContactForm from '~/components/partials/ContactForm';\nimport { isAuthenticated, getCookie } from '~/components/shared/authenticate/Authenticate';\nimport UserRepository from '~/repositories/UserRepository';\nimport AdminPage from '~/components/layouts/AdminPage';\n\nconst BecomeAVendorPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"admin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const res = isAuthenticated(context);\n  console.log(res);\n\n  if (res == false) {\n    return {\n      redirect: {\n        destination: '/admin/login',\n        permanent: false\n      }\n    };\n  } else {\n    const userId = getCookie('userId', context.req);\n    const token = getCookie('jwt', context.req);\n    console.log(userId);\n    console.log(token);\n    return {\n      props: {}\n    };\n  }\n}\nexport default BecomeAVendorPage;","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/pages/admin/index.jsx"],"names":["React","ContainerPage","VendorBanner","VendorAbout","VendorMileStone","VendorBestFees","VendorTestimonials","VendorFaqs","ContactForm","isAuthenticated","getCookie","UserRepository","AdminPage","BecomeAVendorPage","getServerSideProps","context","res","console","log","redirect","destination","permanent","userId","req","token","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,+CAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAE5B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;AASA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C,QAAMC,GAAG,GAAGP,eAAe,CAACM,OAAD,CAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,MAAIA,GAAG,IAAI,KAAX,EAAkB;AACd,WAAO;AACHG,MAAAA,QAAQ,EAAE;AACNC,QAAAA,WAAW,EAAE,cADP;AAENC,QAAAA,SAAS,EAAE;AAFL;AADP,KAAP;AAMH,GAPD,MAOO;AACH,UAAMC,MAAM,GAAGZ,SAAS,CAAC,QAAD,EAAWK,OAAO,CAACQ,GAAnB,CAAxB;AACA,UAAMC,KAAK,GAAGd,SAAS,CAAC,KAAD,EAAQK,OAAO,CAACQ,GAAhB,CAAvB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE;AADJ,KAAP;AAIH;AAEJ;AAGD,eAAeZ,iBAAf","sourcesContent":["import React from 'react';\nimport ContainerPage from '~/components/layouts/ContainerPage';\nimport VendorBanner from '~/components/partials/VendorBanner';\nimport VendorAbout from '~/components/partials/VendorAbout';\nimport VendorMileStone from '~/components/partials/VendorMileStone';\nimport VendorBestFees from '~/components/partials/VendorBestFees';\nimport VendorTestimonials from '~/components/partials/VendorTestimonials';\nimport VendorFaqs from '~/components/partials/VendorFaqs';\nimport ContactForm from '~/components/partials/ContactForm';\nimport { isAuthenticated, getCookie } from '~/components/shared/authenticate/Authenticate'\nimport UserRepository from '~/repositories/UserRepository';\nimport AdminPage from '~/components/layouts/AdminPage';\nconst BecomeAVendorPage = () => {\n\n    return (\n        <div >\n            admin\n        </div>\n    );\n};\n\nexport async function getServerSideProps(context) {\n    const res = isAuthenticated(context)\n    console.log(res)\n    if (res == false) {\n        return {\n            redirect: {\n                destination: '/admin/login',\n                permanent: false,\n            },\n        }\n    } else {\n        const userId = getCookie('userId', context.req)\n        const token = getCookie('jwt', context.req)\n        console.log(userId)\n        console.log(token)\n        return {\n            props: { },\n        }\n        \n    }\n\n}\n\n\nexport default BecomeAVendorPage;\n"]},"metadata":{},"sourceType":"module"}