{"ast":null,"code":"import _regeneratorRuntime from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getCartSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addItemSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(removeItemSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(increaseQtySaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(decreaseItemQtySaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(clearCartSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(savePaymentSaga),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery, call } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport PaymentRepository from '~/repositories/PaymentRepository';\nimport { actionTypes, getCartError, getCartSuccess, updateCartSuccess, updateCartError } from './action';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nexport var calculateAmount = function calculateAmount(obj) {\n  return Object.values(obj).reduce(function (acc, _ref) {\n    var quantity = _ref.quantity,\n        price = _ref.price;\n    return acc + quantity * price;\n  }, 0).toFixed(2);\n};\n\nfunction getCartSaga() {\n  return _regeneratorRuntime.wrap(function getCartSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(getCartSuccess());\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 9;\n          return put(getCartError(_context.t0));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nfunction addItemSaga(payload) {\n  var product, localCart, currentCart;\n  return _regeneratorRuntime.wrap(function addItemSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(localStorage.getItem('persist:nextjs')).cart;\n          currentCart = JSON.parse(localCart);\n          currentCart.cartItems.push(product); // currentCart.amount = calculateAmount(currentCart.cartItems);\n\n          currentCart.cartTotal++;\n          _context2.next = 8;\n          return put(updateCartSuccess(currentCart));\n\n        case 8:\n          modalSuccess('success');\n          _context2.next = 15;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 15;\n          return put(getCartError(_context2.t0));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\n\nfunction removeItemSaga(payload) {\n  var product, localCart, index;\n  return _regeneratorRuntime.wrap(function removeItemSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:nextjs')).cart);\n          index = localCart.cartItems.findIndex(function (item) {\n            return item.id === product.id;\n          });\n          localCart.cartTotal = localCart.cartTotal - product.quantity;\n          localCart.cartItems.splice(index, 1);\n          localCart.amount = calculateAmount(localCart.cartItems);\n\n          if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n          }\n\n          _context3.next = 10;\n          return put(updateCartSuccess(localCart));\n\n        case 10:\n          modalWarning('warning');\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 17;\n          return put(getCartError(_context3.t0));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction increaseQtySaga(payload) {\n  var product, localCart, selectedItem;\n  return _regeneratorRuntime.wrap(function increaseQtySaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:nextjs')).cart);\n          selectedItem = localCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n          }\n\n          _context4.next = 7;\n          return put(updateCartSuccess(localCart));\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put(getCartError(_context4.t0));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction decreaseItemQtySaga(payload) {\n  var product, localCart, selectedItem;\n  return _regeneratorRuntime.wrap(function decreaseItemQtySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:nextjs')).cart);\n          selectedItem = localCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n          }\n\n          _context5.next = 7;\n          return put(updateCartSuccess(localCart));\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put(getCartError(_context5.t0));\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction clearCartSaga() {\n  var emptyCart;\n  return _regeneratorRuntime.wrap(function clearCartSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0\n          };\n          _context6.next = 4;\n          return put(updateCartSuccess(emptyCart));\n\n        case 4:\n          _context6.next = 10;\n          break;\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 10;\n          return put(updateCartError(_context6.t0));\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 6]]);\n}\n\nfunction savePaymentSaga(_ref2) {\n  var payment_detail, res, response, emptyCart;\n  return _regeneratorRuntime.wrap(function savePaymentSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payment_detail = _ref2.payment_detail;\n          _context7.prev = 1;\n          _context7.next = 4;\n          return call(PaymentRepository.savePayment, payment_detail);\n\n        case 4:\n          res = _context7.sent;\n          response = res.data;\n\n          if (!(response.status == 200)) {\n            _context7.next = 10;\n            break;\n          }\n\n          emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0\n          };\n          _context7.next = 10;\n          return put(updateCartSuccess(emptyCart));\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](1);\n          _context7.next = 16;\n          return put(updateCartError(_context7.t0));\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[1, 12]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n\n        case 2:\n          _context8.next = 4;\n          return all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n\n        case 4:\n          _context8.next = 6;\n          return all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n\n        case 6:\n          _context8.next = 8;\n          return all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n\n        case 8:\n          _context8.next = 10;\n          return all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n\n        case 10:\n          _context8.next = 12;\n          return all([takeEvery(actionTypes.CLEAR_CART, clearCartSaga)]);\n\n        case 12:\n          _context8.next = 14;\n          return all([takeEvery(actionTypes.SAVE_PAYMENT, savePaymentSaga)]);\n\n        case 14:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/store/cart/saga.js"],"names":["getCartSaga","addItemSaga","removeItemSaga","increaseQtySaga","decreaseItemQtySaga","clearCartSaga","savePaymentSaga","rootSaga","all","put","takeEvery","call","notification","PaymentRepository","actionTypes","getCartError","getCartSuccess","updateCartSuccess","updateCartError","modalSuccess","type","message","description","duration","modalWarning","calculateAmount","obj","Object","values","reduce","acc","quantity","price","toFixed","payload","product","localCart","JSON","parse","localStorage","getItem","cart","currentCart","cartItems","push","cartTotal","index","findIndex","item","id","splice","amount","length","selectedItem","find","emptyCart","payment_detail","savePayment","res","response","data","status","GET_CART","ADD_ITEM","REMOVE_ITEM","INCREASE_QTY","DECREASE_QTY","CLEAR_CART","SAVE_PAYMENT"],"mappings":"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","sourcesContent":["import { all, put, takeEvery, call } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport PaymentRepository from '~/repositories/PaymentRepository'\nimport {\n    actionTypes,\n    getCartError,\n    getCartSuccess,\n    updateCartSuccess,\n    updateCartError,\n} from './action';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Success',\n        description: 'This product has been added to your cart!',\n        duration: 1,\n    });\n};\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Remove A Item',\n        description: 'This product has been removed from your cart!',\n        duration: 1,\n    });\n};\n\nexport const calculateAmount = (obj) =>\n    Object.values(obj)\n        .reduce((acc, { quantity, price }) => acc + quantity * price, 0)\n        .toFixed(2);\n\nfunction* getCartSaga() {\n    try {\n        yield put(getCartSuccess());\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* addItemSaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(localStorage.getItem('persist:nextjs')).cart;\n        let currentCart = JSON.parse(localCart);\n        \n        currentCart.cartItems.push(product);\n        // currentCart.amount = calculateAmount(currentCart.cartItems);\n        currentCart.cartTotal++;\n        yield put(updateCartSuccess(currentCart));\n        modalSuccess('success');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* removeItemSaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:nextjs')).cart\n        );\n        let index = localCart.cartItems.findIndex(\n            (item) => item.id === product.id\n        );\n        localCart.cartTotal = localCart.cartTotal - product.quantity;\n        localCart.cartItems.splice(index, 1);\n        localCart.amount = calculateAmount(localCart.cartItems);\n        if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n        }\n        yield put(updateCartSuccess(localCart));\n        modalWarning('warning');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* increaseQtySaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:nextjs')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n        if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:nextjs')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n\n        if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* clearCartSaga() {\n    try {\n        const emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0,\n        };\n        yield put(updateCartSuccess(emptyCart));\n    } catch (err) {\n        yield put(updateCartError(err));\n    }\n}\n\nfunction* savePaymentSaga({payment_detail}) {\n    try{\n        const res = yield call(PaymentRepository.savePayment, payment_detail)\n        const response = res.data\n        if (response.status == 200) {\n            const emptyCart = {\n                cartItems: [],\n                amount: 0,\n                cartTotal: 0,\n            };\n            yield put(updateCartSuccess(emptyCart));\n        }\n\n    } catch (error) {\n        yield put(updateCartError(error))\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n    yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n    yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n    yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n    yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n    yield all([takeEvery(actionTypes.CLEAR_CART, clearCartSaga)]);\n    yield all([takeEvery(actionTypes.SAVE_PAYMENT, savePaymentSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}