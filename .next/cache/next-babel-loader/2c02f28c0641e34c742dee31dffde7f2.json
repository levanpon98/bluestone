{"ast":null,"code":"import axios from 'axios';\nconst baseDomain = 'http://localhost:1337/api/'; // API for products\n\nexport const basePostUrl = 'http://localhost:1337/api/'; // API for post\n\nexport const baseStoreURL = 'http://localhost:1337/api/v1'; // API for vendor(store)\n\nexport const customHeaders = {\n  Accept: 'application/json'\n};\nexport const baseUrl = `${baseDomain}`;\nexport default axios.create({\n  baseUrl,\n  headers: customHeaders\n});\nexport const serializeQuery = query => {\n  return Object.keys(query).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`).join('&');\n};","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/repositories/Repository.js"],"names":["axios","baseDomain","basePostUrl","baseStoreURL","customHeaders","Accept","baseUrl","create","headers","serializeQuery","query","Object","keys","map","key","encodeURIComponent","join"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,UAAU,GAAG,4BAAnB,C,CAAiD;;AACjD,OAAO,MAAMC,WAAW,GAAG,4BAApB,C,CAAkD;;AACzD,OAAO,MAAMC,YAAY,GAAG,8BAArB,C,CAAqD;;AAE5D,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAAtB;AAIP,OAAO,MAAMC,OAAO,GAAI,GAAEL,UAAW,EAA9B;AAEP,eAAeD,KAAK,CAACO,MAAN,CAAa;AACxBD,EAAAA,OADwB;AAExBE,EAAAA,OAAO,EAAEJ;AAFe,CAAb,CAAf;AAKA,OAAO,MAAMK,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EACFG,GADE,CAEEC,GAAD,IACK,GAAEC,kBAAkB,CAACD,GAAD,CAAM,IAAGC,kBAAkB,CAACL,KAAK,CAACI,GAAD,CAAN,CAAa,EAHlE,EAKFE,IALE,CAKG,GALH,CAAP;AAMH,CAPM","sourcesContent":["import axios from 'axios';\nconst baseDomain = 'http://localhost:1337/api/'; // API for products\nexport const basePostUrl = 'http://localhost:1337/api/'; // API for post\nexport const baseStoreURL = 'http://localhost:1337/api/v1'; // API for vendor(store)\n\nexport const customHeaders = {\n    Accept: 'application/json',\n};\n\nexport const baseUrl = `${baseDomain}`;\n\nexport default axios.create({   \n    baseUrl,\n    headers: customHeaders,\n});\n\nexport const serializeQuery = (query) => {\n    return Object.keys(query)\n        .map(\n            (key) =>\n                `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n        )\n        .join('&');\n};\n"]},"metadata":{},"sourceType":"module"}