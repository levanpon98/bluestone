{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './action';\nexport const initState = {\n  userId: null,\n  token: null,\n  error: null,\n  isLoggedIn: false,\n  isActive: false\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case actionTypes.LOGIN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error,\n        isLoggedIn: false\n      });\n\n    case actionTypes.LOGIN_SUCCESS:\n      console.log(action);\n      return _objectSpread(_objectSpread({}, state), {\n        error: null,\n        isLoggedIn: true,\n        token: action.payload.token,\n        userId: action.payload.userId,\n        isActive: action.payload.isActive\n      });\n\n    case actionTypes.LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {\n        isLoggedIn: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/store/auth/reducer.js"],"names":["actionTypes","initState","userId","token","error","isLoggedIn","isActive","reducer","state","action","type","LOGIN_FAILURE","LOGIN_SUCCESS","console","log","payload","LOGOUT"],"mappings":";;;;;;AAAA,SACEA,WADF,QAEO,UAFP;AAIA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,MAAM,EAAE,IADe;AAEvBC,EAAAA,KAAK,EAAE,IAFgB;AAGvBC,EAAAA,KAAK,EAAE,IAHgB;AAIvBC,EAAAA,UAAU,EAAE,KAJW;AAKvBC,EAAAA,QAAQ,EAAE;AALa,CAAlB;;AAQP,SAASC,OAAT,CAAiBC,KAAK,GAAGP,SAAzB,EAAoCQ,MAApC,EAA4C;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAW,CAACW,aAAjB;AACE,6CACKH,KADL,GAEK;AACDJ,QAAAA,KAAK,EAAEK,MAAM,CAACL,KADb;AAEDC,QAAAA,UAAU,EAAE;AAFX,OAFL;;AAQF,SAAKL,WAAW,CAACY,aAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,6CACKD,KADL,GAEK;AACDJ,QAAAA,KAAK,EAAE,IADN;AAEDC,QAAAA,UAAU,EAAE,IAFX;AAGDF,QAAAA,KAAK,EAAEM,MAAM,CAACM,OAAP,CAAeZ,KAHrB;AAIDD,QAAAA,MAAM,EAAEO,MAAM,CAACM,OAAP,CAAeb,MAJtB;AAKDI,QAAAA,QAAQ,EAAEG,MAAM,CAACM,OAAP,CAAeT;AALxB,OAFL;;AAWF,SAAKN,WAAW,CAACgB,MAAjB;AACE,6CACKR,KADL,GAEK;AACDH,QAAAA,UAAU,EAAE;AADX,OAFL;;AAQF;AACE,aAAOG,KAAP;AAjCJ;AAmCD;;AAED,eAAeD,OAAf","sourcesContent":["import {\n  actionTypes\n} from './action';\n\nexport const initState = {\n  userId: null,\n  token: null,\n  error: null,\n  isLoggedIn: false,\n  isActive: false\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        ...{\n          error: action.error,\n          isLoggedIn: false,\n        },\n      };\n\n    case actionTypes.LOGIN_SUCCESS:\n      console.log(action)\n      return {\n        ...state,\n        ...{\n          error: null,\n          isLoggedIn: true,\n          token: action.payload.token,\n          userId: action.payload.userId,\n          isActive: action.payload.isActive\n        },\n      };\n\n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        ...{\n          isLoggedIn: false\n        },\n\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}