{"ast":null,"code":"import _regeneratorRuntime from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(registerSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logoutSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, select, takeEvery, call } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { createSelector } from 'reselect';\nimport { actionTypes, loginFailure, loginSuccess, registerFailure, registerSuccess, logoutSuccess } from './action';\nimport Cookie from 'js-cookie';\nimport UserRepository from '~/repositories/UserRepository';\n\nvar modal = function modal(type, message, description) {\n  notification[type]({\n    message: message,\n    description: description\n  });\n};\n\nfunction loginSaga(action) {\n  var _action$payload, email, password, route, res, response;\n\n  return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _action$payload = action.payload, email = _action$payload.email, password = _action$payload.password, route = _action$payload.route;\n          _context.prev = 1;\n          console.log(email);\n          console.log(password);\n          _context.next = 6;\n          return call(UserRepository.login, {\n            email: email,\n            password: password\n          });\n\n        case 6:\n          res = _context.sent;\n          response = res.data.data;\n\n          if (!(res.data.status == 200)) {\n            _context.next = 17;\n            break;\n          }\n\n          Cookie.set('jwt', response.token);\n          Cookie.set('userId', response.userId);\n          _context.next = 13;\n          return put(loginSuccess(response));\n\n        case 13:\n          modal('success', \"Login Successfully!!!\", \"Welcome Back!!!\");\n          route.push('/');\n          _context.next = 20;\n          break;\n\n        case 17:\n          _context.next = 19;\n          return put(loginFailure('Wrong username/password.'));\n\n        case 19:\n          modal('warning', \"Login Fail\", \"Wrong username/password.\");\n\n        case 20:\n          _context.next = 27;\n          break;\n\n        case 22:\n          _context.prev = 22;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 26;\n          return put(loginFailure('Something went wrong.'));\n\n        case 26:\n          modal('warning', \"Login Fail\", \"Wrong username/password.\");\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 22]]);\n}\n\nfunction registerSaga() {\n  var email, password, res;\n  return _regeneratorRuntime.wrap(function registerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put(loggingIn(true));\n\n        case 2:\n          _context2.next = 4;\n          return select(selectEmail());\n\n        case 4:\n          email = _context2.sent;\n          _context2.next = 7;\n          return select(selectPassword());\n\n        case 7:\n          password = _context2.sent;\n          _context2.prev = 8;\n          _context2.next = 11;\n          return fetch('http://localhost:1337/api/v1/users/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: email,\n              password: password\n            })\n          });\n\n        case 11:\n          res = _context2.sent;\n\n          if (!res.ok) {\n            _context2.next = 17;\n            break;\n          }\n\n          _context2.next = 15;\n          return put(registerSuccess());\n\n        case 15:\n          _context2.next = 20;\n          break;\n\n        case 17:\n          _context2.next = 19;\n          return put(registerFailure());\n\n        case 19:\n          modal('warning', \"Register Fail\", \"Email is already used!!!\");\n\n        case 20:\n          _context2.next = 26;\n          break;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.t0 = _context2[\"catch\"](8);\n          _context2.next = 26;\n          return put(registerFailure('Something went wrong.'));\n\n        case 26:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[8, 22]]);\n}\n\nfunction logoutSaga(action) {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          Cookie.remove('jwt');\n          Cookie.remove('userId');\n          _context3.next = 4;\n          return put(logoutSuccess({}));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeEvery(actionTypes.LOGIN, loginSaga)]);\n\n        case 2:\n          _context4.next = 4;\n          return all([takeEvery(actionTypes.LOGOUT, logoutSaga)]);\n\n        case 4:\n          _context4.next = 6;\n          return all([takeEvery(actionTypes.REGISTER, registerSaga)]);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":null,"metadata":{},"sourceType":"module"}