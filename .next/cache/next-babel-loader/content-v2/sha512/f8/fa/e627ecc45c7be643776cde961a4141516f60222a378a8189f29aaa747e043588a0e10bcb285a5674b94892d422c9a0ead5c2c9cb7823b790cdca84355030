{"ast":null,"code":"import Repository, { baseUrl } from './Repository';\nimport Cookie from 'js-cookie';\n\nclass UserRepository {\n  login(values) {\n    const res = Repository.post(`${baseUrl}/auth/login`, values);\n    return res;\n  }\n\n  async register(values) {\n    const reponse = await Repository.post(`${baseUrl}/users/register`, values).then(response => {\n      return response;\n    }).catch(error => ({\n      error: JSON.stringify(error)\n    }));\n  }\n\n  async getUser(userId, token) {\n    const response = await Repository.get(`${baseUrl}/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (response.data.status == 200) {\n      return response.data.data;\n    } else {\n      return null;\n    }\n  }\n\n  updateUser({\n    payload\n  }) {\n    const res = Repository.post(`${baseUrl}/users/${payload.userId}`, payload.values, {\n      headers: {\n        'Authorization': `Bearer ${payload.token}`\n      }\n    });\n    return res;\n  }\n\n}\n\nexport default new UserRepository();","map":null,"metadata":{},"sourceType":"module"}