{"ast":null,"code":"import { all, put, select, takeEvery, call } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { createSelector } from 'reselect';\nimport { actionTypes, loginFailure, loginSuccess, registerFailure, registerSuccess, logoutSuccess } from './action';\nimport Cookie from 'js-cookie';\nimport UserRepository from '~/repositories/UserRepository';\n\nconst modal = (type, message, description) => {\n  notification[type]({\n    message: message,\n    description: description\n  });\n};\n\nfunction* loginSaga(action) {\n  const {\n    email,\n    password,\n    route\n  } = action.payload;\n\n  try {\n    console.log(email);\n    console.log(password);\n    const res = yield call(UserRepository.login, {\n      email,\n      password\n    });\n    const response = res.data.data;\n\n    if (res.data.status == 200) {\n      Cookie.set('jwt', response.token);\n      Cookie.set('userId', response.userId);\n      yield put(loginSuccess(response));\n      modal('success', \"Login Successfully!!!\", \"Welcome Back!!!\");\n      route.push('/');\n    } else {\n      yield put(loginFailure('Wrong username/password.'));\n      modal('warning', \"Login Fail\", \"Wrong username/password.\");\n    }\n  } catch (err) {\n    yield put(loginFailure('Something went wrong.'));\n    modal('warning', \"Login Fail\", \"Wrong username/password.\");\n  }\n}\n\nfunction* registerSaga() {\n  yield put(loggingIn(true));\n  const email = yield select(selectEmail());\n  const password = yield select(selectPassword());\n\n  try {\n    const res = yield fetch('http://localhost:1337/api/v1/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n\n    if (res.ok) {\n      yield put(registerSuccess());\n    } else {\n      yield put(registerFailure());\n      modal('warning', \"Register Fail\", \"Email is already used!!!\");\n    }\n  } catch (err) {\n    yield put(registerFailure('Something went wrong.'));\n  }\n}\n\nfunction* logoutSaga(action) {\n  Cookie.remove('jwt');\n  Cookie.remove('userId');\n  yield put(logoutSuccess({}));\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logoutSaga)]);\n  yield all([takeEvery(actionTypes.REGISTER, registerSaga)]);\n}","map":null,"metadata":{},"sourceType":"module"}