{"ast":null,"code":"import { all, put, takeLatest, takeEvery, call } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport { notification } from 'antd';\nimport OrderRepository from '~/repositories/OrderRepository';\nimport { actionTypes } from './action';\n\nconst showModal = (type, message, desc) => {\n  notification[type]({\n    message: message,\n    description: desc,\n    duration: 1\n  });\n};\n\nfunction* createOrderSaga(payload) {\n  const data = payload.payload;\n\n  try {\n    const userData = yield call(OrderRepository.createOrder, data);\n  } catch (err) {// yield put(getPostsError(err));\n  }\n}\n\nfunction* editOrderSaga(payload) {\n  const data = payload.payload;\n  console.log(data);\n\n  try {\n    const userData = yield call(OrderRepository.editOrder, data);\n  } catch (err) {// yield put(getPostsError(err));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.CREATE_ORDER, createOrderSaga), takeEvery(actionTypes.EDIT_ORDER, editOrderSaga)]);\n}","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/store/order/saga.js"],"names":["all","put","takeLatest","takeEvery","call","polyfill","notification","OrderRepository","actionTypes","showModal","type","message","desc","description","duration","createOrderSaga","payload","data","userData","createOrder","err","editOrderSaga","console","log","editOrder","rootSaga","CREATE_ORDER","EDIT_ORDER"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,IAA1C,QAAsD,oBAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SACIC,WADJ,QAEO,UAFP;;AAKA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AACvCN,EAAAA,YAAY,CAACI,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAEA,OADM;AAEfE,IAAAA,WAAW,EAAED,IAFE;AAGfE,IAAAA,QAAQ,EAAE;AAHK,GAAnB;AAKH,CAND;;AAQA,UAAUC,eAAV,CAA0BC,OAA1B,EAAmC;AAC/B,QAAMC,IAAI,GAAGD,OAAO,CAACA,OAArB;;AACA,MAAI;AACA,UAAME,QAAQ,GAAG,MAAMd,IAAI,CAACG,eAAe,CAACY,WAAjB,EAA8BF,IAA9B,CAA3B;AACH,GAFD,CAEE,OAAOG,GAAP,EAAY,CACV;AACH;AACJ;;AAED,UAAUC,aAAV,CAAwBL,OAAxB,EAAiC;AAC7B,QAAMC,IAAI,GAAGD,OAAO,CAACA,OAArB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACG,eAAe,CAACiB,SAAjB,EAA4BP,IAA5B,CAA3B;AACH,GAFD,CAEE,OAAOG,GAAP,EAAY,CACV;AACH;AACJ;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMzB,GAAG,CAAC,CACNG,SAAS,CAACK,WAAW,CAACkB,YAAb,EAA2BX,eAA3B,CADH,EAENZ,SAAS,CAACK,WAAW,CAACmB,UAAb,EAAyBN,aAAzB,CAFH,CAAD,CAAT;AAIH","sourcesContent":["import { all, put, takeLatest, takeEvery, call } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport { notification } from 'antd';\nimport OrderRepository from '~/repositories/OrderRepository'\nimport {\n    actionTypes\n} from './action';\n\n\nconst showModal = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: desc,\n        duration: 1,\n    });\n};\n\nfunction* createOrderSaga(payload) {\n    const data = payload.payload\n    try {\n        const userData = yield call(OrderRepository.createOrder, data)\n    } catch (err) {\n        // yield put(getPostsError(err));\n    }\n}\n\nfunction* editOrderSaga(payload) {\n    const data = payload.payload\n    console.log(data)\n    try {\n        const userData = yield call(OrderRepository.editOrder, data)\n    } catch (err) {\n        // yield put(getPostsError(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([\n        takeEvery(actionTypes.CREATE_ORDER, createOrderSaga),\n        takeEvery(actionTypes.EDIT_ORDER, editOrderSaga),\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}