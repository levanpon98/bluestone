{"ast":null,"code":"import _regeneratorRuntime from \"/home/ponlv/work/projects/hmsp/bluestone/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(updateInfoSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, select, takeEvery, call } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { createSelector } from 'reselect';\nimport { actionTypes, updateInfoSuccess, updateInfoFail } from './action';\nimport Cookie from 'js-cookie';\n\nvar modal = function modal(type, message, description) {\n  notification[type]({\n    message: message,\n    description: description\n  });\n};\n\nfunction updateInfoSaga() {\n  return _regeneratorRuntime.wrap(function updateInfoSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(updateInfoSuccess());\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 9;\n          return put(updateInfoFail(_context.t0));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(actionTypes.UPDATE_INFO, updateInfoSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/ponlv/work/projects/hmsp/bluestone/store/checkout/saga.js"],"names":["updateInfoSaga","rootSaga","all","put","select","takeEvery","call","notification","createSelector","actionTypes","updateInfoSuccess","updateInfoFail","Cookie","modal","type","message","description","UPDATE_INFO"],"mappings":";;oDA4BUA,c;qDAQeC,Q;;AApCzB,SACIC,GADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,SAJJ,EAKIC,IALJ,QAMO,oBANP;AAOA,SACIC,YADJ,QAEO,MAFP;AAGA,SACIC,cADJ,QAEO,UAFP;AAGA,SACIC,WADJ,EAEIC,iBAFJ,EAGIC,cAHJ,QAIO,UAJP;AAKA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,EAAgC;AAC1CT,EAAAA,YAAY,CAACO,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAEA,OADM;AAEfC,IAAAA,WAAW,EAAEA;AAFE,GAAnB;AAIH,CALD;;AAOA,SAAUhB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMG,GAAG,CAACO,iBAAiB,EAAlB,CAAT;;AAFR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIQ,iBAAMP,GAAG,CAACQ,cAAc,aAAf,CAAT;;AAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACI,WAAW,CAACQ,WAAb,EAA0BjB,cAA1B,CAAV,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\n    all,\n    put,\n    select,\n    takeEvery,\n    call\n} from 'redux-saga/effects';\nimport {\n    notification\n} from 'antd';\nimport {\n    createSelector\n} from 'reselect';\nimport {\n    actionTypes,\n    updateInfoSuccess,\n    updateInfoFail\n} from './action';\nimport Cookie from 'js-cookie';\n\n\nconst modal = (type, message, description) => {\n    notification[type]({\n        message: message,\n        description: description,\n    });\n};\n\nfunction* updateInfoSaga() {\n    try {\n        yield put(updateInfoSuccess());\n    } catch (err) {\n        yield put(updateInfoFail(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.UPDATE_INFO, updateInfoSaga)]);\n}"]},"metadata":{},"sourceType":"module"}